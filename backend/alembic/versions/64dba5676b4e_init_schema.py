"""init schema

Revision ID: 64dba5676b4e
Revises: 
Create Date: 2025-09-06 22:41:00.134665

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '64dba5676b4e'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('people',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=160), nullable=False),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_people_full_name'), 'people', ['full_name'], unique=False)
    op.create_table('race_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('date_from', sa.DateTime(), nullable=True),
    sa.Column('date_to', sa.DateTime(), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326, dimension=2, from_text='ST_GeogFromText', name='geography'), nullable=True),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('source_url', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_race_events_name'), 'race_events', ['name'], unique=False)
    op.create_index(op.f('ix_race_events_year'), 'race_events', ['year'], unique=False)
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('time_str', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['race_events.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['people.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'position', name='uq_event_position')
    )
    # ### end Alembic commands ###
    op.execute("CREATE INDEX IF NOT EXISTS idx_race_events_geom ON race_events USING GIST (geom);")


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('results')
    op.drop_index(op.f('ix_race_events_year'), table_name='race_events')
    op.drop_index(op.f('ix_race_events_name'), table_name='race_events')
    op.drop_table('race_events')
    op.drop_index(op.f('ix_people_full_name'), table_name='people')
    op.drop_table('people')
    # ### end Alembic commands ###
    op.execute("DROP INDEX IF EXISTS idx_race_events_geom;")
